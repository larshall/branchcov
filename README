BranchCov is a gcc plugin for gcc-4.5 for measuring branch coverage

BranchCov is designed for analyzing which branches gets executed runtime.
It can either insert a printf statement in each possible branch or insert a function a call statement
to __tracer, which has to be accessible from where the call expression will get inserted.

The function call has to have the following prototype:
__tracer(const char *filename, const char *scope, const char *functioname, const char *lineno).

When a branch gets executed, the __tracer function gets called with the following parameters:
filename - The name of the file
scope - The namespace/class name[s] concatenated c++ style. (eg. ns1::ns2::class1::function).
functionname - The method/functionname
linno - The line number

Because gcc doesn't keep track of the 'else' keyword, BranchCov will pass the lineno that point to the line where the next statement in that branch is.

BranchCov only parses the functions that are specified in a file, given by the argument to gcc:-fplugin-arg-branchcov-tracefile=afile
See an example in the example directory.

For now BranchCov only supports c++.

Note:
Please check that all is OK when using BranchCov before running it in a production setup. (Eg. Check that it doesn't overwrite some code, Lineno is correct etc).
I will very much appreciate any feedback / bug reports.

